DEPTH = 256;	% Memory depth and width are required	%
WIDTH = 16;	% Enter a decimal number	%

ADDRESS_RADIX = HEX;	% Address and value radixes are optional%
DATA_RADIX = HEX;	% Enter BIN, DEC, HEX, or OCT; unless %
				% otherwise specified, radixes = HEX	%
-- Specify values for addresses, which can be single address or range
CONTENT
	BEGIN
	00		:	0220; % LOAD 20 (carrega valor 1234) %
	01		:	0130; % STORE 30 (armazena AC em endereço 30) %
	02		:	0221; % LOAD 21 (carrega valor ABCD) %
	03		:	0131; % STORE 31 (armazena AC em endereço 31) %
	04		:	0222; % LOAD 22 (carrega valor 5678) %
	05		:	0132; % STORE 32 (armazena AC em endereço 32) %
	06		:	0230; % LOAD 30 (carrega valor armazenado em 30 - deve ser 1234) %
	07		:	0133; % STORE 33 (armazena em 33 para verificação) %
	08		:	0231; % LOAD 31 (carrega valor armazenado em 31 - deve ser ABCD) %
	09		:	0134; % STORE 34 (armazena em 34 para verificação) %
	0A		:	0232; % LOAD 32 (carrega valor armazenado em 32 - deve ser 5678) %
	0B		:	0135; % STORE 35 (armazena em 35 para verificação) %
	0C		:	0223; % LOAD 23 (carrega valor 0000) %
	0D		:	0136; % STORE 36 (limpa posição 36 com 0000) %
	0E		:	030E; % JUMP 0E (loop infinito para observar resultados) %
	0F		:	0000; % NOP %
	[10..1F]	:	0000;	
	20		:	1234; % Valor teste 1 %
	21		:	ABCD; % Valor teste 2 %
	22		:	5678; % Valor teste 3 %
	23		:	0000; % Valor zero %
	[24..2F]	:	0000;
	30		:	0000; % Posição onde será armazenado 1234 %
	31		:	0000; % Posição onde será armazenado ABCD %
	32		:	0000; % Posição onde será armazenado 5678 %
	33		:	0000; % Posição de verificação 1 %
	34		:	0000; % Posição de verificação 2 %
	35		:	0000; % Posição de verificação 3 %
	36		:	0000; % Posição de teste zero %
	[37..FF]	:	0000;
END ;	

